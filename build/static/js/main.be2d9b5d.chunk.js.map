{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","assets/Logo/burger-logo.png","components/Logo/Logo.module.css","components/Burger/Burger.module.css","assets/ingredient-images sync /^/.//.*$","assets/ingredient-images/Cheese.jpeg","assets/ingredient-images/Chicken.jpeg","assets/ingredient-images/Mayonnaise.jpeg","assets/ingredient-images/Salad.jpeg","components/Logo/Logo.js","components/Navbar/Navbar.js","components/Base/Base.js","store/actions/ingredientsActions/ingredientsActions.js","store/actions/ingredientsActions/helper/getAllIngredients.js","backend.js","components/BuildControls/BuildControl/BuildControl.js","components/BuildControls/BuildControls.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","containers/BurgerBuilder/BurgerBuilder.js","containers/helper/cartHelper.js","components/Item/ItemDetails/ItemDetails.js","components/Item/Item.js","containers/Cart/Cart.js","Routes.js","store/reducers/ingredientsReducers/ingredientsReducers.js","store/reducers/cartReducers/cartReducers.js","store/actions/cartActions/cartActions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Logo","className","styles","src","burgerLogo","alt","Navbar","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Base","props","children","loadAllIngredients","dispatch","a","fetch","process","method","then","response","json","catch","error","ingredients","images","require","BuildControl","imgSrc","label","width","height","price","description","onClick","remover","disabled","adder","BuildControls","ingredientData","controls","ing","push","ctrl","key","ingredientsAdder","ingredientsRemover","addtoCart","purchasable","BurgerIngredient","availableIngredients","useSelector","state","ingredientType","ingredientClassName","charAt","toUpperCase","slice","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Burger","transformedIngredients","igKey","Array","qty","_","i","reduce","arr","el","concat","length","header","BurgerBuilder","useDispatch","currentPrice","totalPrice","currentBurgerIsPurchasable","isPurchasable","currentBurger","currentBurgerIng","useEffect","ingredientsActions","ingId","item","cart","undefined","window","localStorage","getItem","JSON","parse","itemId","Date","toISOString","setItem","stringify","addItemToCart","itemPrice","ItemDetails","ingredientSummary","igkey","removeItem","cartItemId","Item","Cart","useState","cartItems","setCartItems","reload","setReload","setTotalPrice","selectedStore","setSelectedStore","loadCart","sum","removeItemHandler","index","splice","removeItemFromCart","prevState","clearCart","style","bottom","DropdownButton","as","ButtonGroup","drop","variant","title","onSelect","Dropdown","eventKey","Routes","exact","path","component","initialState","getAllIngredientsHandler","action","addIngredientHandler","isIngAdded","updatedCount","newPrice","parseInt","updateCurrentBurger","removeIngredientHandler","oldCount","resetBurgerBuilderHandler","ingredientsReducers","cartReducers","rootReducer","combineReducers","store","createStore","applyMiddleware","ReduxThunk","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.be2d9b5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Chicken\":\"BurgerIngredient_Chicken__2YouW\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Mayonnaise\":\"BurgerIngredient_Mayonnaise__1RbmC\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","var map = {\n\t\"./Cheese.jpeg\": 67,\n\t\"./Chicken.jpeg\": 68,\n\t\"./Mayonnaise.jpeg\": 69,\n\t\"./Salad.jpeg\": 70\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 66;","module.exports = __webpack_public_path__ + \"static/media/Cheese.c2836c9b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Chicken.eb30d83e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Mayonnaise.1494678f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Salad.91fdfe66.jpeg\";","import React from \"react\";\nimport burgerLogo from \"../../assets/Logo/burger-logo.png\";\nimport styles from \"./Logo.module.css\";\n\nconst Logo = () => {\n  return <img className={styles.Logo} src={burgerLogo} alt=\"logo\" />;\n};\n\nexport default Logo;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../Logo/Logo\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-light bg-dark\">\n      <Link className=\"navbar-brand text-white\" to=\"/\">\n        <Logo /> Burger Builder\n      </Link>\n      <button\n        className=\"navbar-toggler bg-light\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarTogglerDemo02\"\n        aria-controls=\"navbarTogglerDemo02\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse \" id=\"navbarTogglerDemo02\">\n        <ul className=\"navbar-nav nav-pills ml-auto mt-2 mt-lg-0 mr-3\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link text-white\" to=\"/\">\n              Home\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link text-white\" to=\"/cart\">\n              Cart\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link text-white\" to=\"/orders\">\n              Orders\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link text-white\" to=\"/auth\">\n              Sign In\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link text-white\" to=\"/auth\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link text-white\" to=\"/auth\">\n              Sign Out\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\nexport default Navbar;\n","import React from \"react\";\nimport Navbar from \"../Navbar/Navbar\";\n\nconst Base = (props) => {\n  return (\n    <>\n      <Navbar />\n      <main>{props.children}</main>\n    </>\n  );\n};\nexport default Base;\n","import { getAllIngredients } from \"./helper/getAllIngredients\";\n\n//GET all ingredients from firebase\nexport const GET_ALL_INGREDIENTS = \"GET_ALL_INGREDIENTS\";\n\nexport const loadAllIngredients = () => {\n  return async (dispatch) => {\n    const response = await getAllIngredients();\n\n    dispatch({ type: GET_ALL_INGREDIENTS, ingredients: response });\n  };\n};\n\n//Add an ingredient to current burger\nexport const ADD_INGREDIENT = \"ADD_INGREDIENT\";\n\nexport const addIngredient = (ingId) => {\n  return {\n    type: ADD_INGREDIENT,\n    ingId: ingId,\n  };\n};\n\n//Remove an ingredient to current burger\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\n\nexport const removeIngredient = (ingId) => {\n  return {\n    type: REMOVE_INGREDIENT,\n    ingId: ingId,\n  };\n};\n\n//Reset burger builder if item is addded to cart\nexport const RESET_BURGER_BUILDER = \"RESET_BURGER_BUILDER\";\n\nexport const resetBurgerBuilder = () => {\n  return {\n    type: RESET_BURGER_BUILDER,\n  };\n};\n","import { API } from \"../../../../backend\";\n\nexport const getAllIngredients = () => {\n  return fetch(`${API}/ingredientsInfo.json`, {\n    method: \"GET\",\n  })\n    .then((response) => {\n      return response.json();\n    })\n    .catch((error) => {\n      return error;\n    });\n};\n","export const API = process.env.REACT_APP_BACKEND;","import React from \"react\";\n//webpack method\nvar images = require.context(\"../../../assets/ingredient-images\", true);\n\nconst BuildControl = (props) => {\n  let imgSrc = images(`./${props.ingredients.label}.jpeg`);\n  return (\n    <div className=\"media\">\n      <img\n        src={imgSrc}\n        className=\"mr-3 rounded\"\n        width=\"100px\"\n        height=\"80px\"\n        alt={props.label}\n      />\n      <div className=\"media-body\">\n        <div className=\"row\">\n          <div className=\"col-lg-8 col-md-6 col-sm-6 col-6\">\n            <h5 className=\"mt-0 mb-0\">{props.ingredients.label}</h5>\n          </div>\n          <div className=\"col-lg-4 col-md-6 col-sm-6 col-6\">\n            <h5 className=\"d-flex justify-content-end\">\n              <span className=\"badge badge-info\">\n                {\" \"}\n                ₹ {props.ingredients.price}{\" \"}\n              </span>\n            </h5>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-12 col-md-12 col-sm-12 col-12\">\n            <p className=\"mt-0 mb-0\">{props.ingredients.description}</p>\n          </div>\n          <div className=\"col-lg-12 col-md-12 col-sm-12 col-12\">\n            <div className=\"d-flex justify-content-end \">\n              <button\n                className=\"btn btn-sm btn-danger text-white mt-1 mr-2\"\n                onClick={props.remover}\n                disabled={props.disabled}\n              >\n                Remove\n              </button>\n              <button\n                className=\"btn btn-sm btn-success text-white mt-1\"\n                onClick={props.adder}\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BuildControl;\n","import React from \"react\";\nimport BuildControl from \"./BuildControl/BuildControl\";\n\nconst BuildControls = (props) => {\n  const ingredientData = {};\n  const controls = [];\n  for (let ing in props.ingredients) {\n    ingredientData[ing] = props.ingredients[ing];\n  }\n  controls.push(ingredientData);\n\n  return (\n    <div className=\"card  rounded bg-dark text-white\">\n      <h4 className=\"card-header bg-dark text-white border-info\">\n        Build Your Burrger Here!!\n      </h4>\n      <div className=\"container\">\n        <div className=\"row\">\n          {Object.keys(controls[0]).map((ctrl) => {\n            return (\n              <div className=\"col-lg-6 col-md-12 col-sm-12 mt-4\" key={ctrl}>\n                <BuildControl\n                  ingredients={controls[0][ctrl]}\n                  adder={() => props.ingredientsAdder(ctrl)}\n                  remover={() => props.ingredientsRemover(ctrl)}\n                  disabled={props.disabled(ctrl)}\n                />\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"row mt-3 mb-3 no-gutters\">\n          <div className=\"col-lg-4 col-md-5 col-sm-6 col-6\">\n            <p className=\"lead  mr-3\">Total Price: ₹{props.price} </p>\n          </div>\n          <div className=\"col-lg-4 col-md-5 col-sm-6 col-6\">\n            <button\n              type=\"button\"\n              className=\"btn btn-info mb-2 d-flex \"\n              onClick={props.addtoCart}\n              disabled={!props.purchasable}\n            >\n              {\" \"}\n              Add to cart\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default BuildControls;\n","import React from \"react\";\nimport styles from \"./BurgerIngredient.module.css\";\nimport propTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\n\nconst BurgerIngredient = (props) => {\n  const ingredients = useSelector((state) => state.ingredients);\n  const availableIngredients = ingredients.ingredients;\n\n  let ingredientType = props.type;\n  if (availableIngredients[props.type]) {\n    ingredientType = availableIngredients[props.type].type;\n  }\n  let ingredientClassName =\n    ingredientType.charAt(0).toUpperCase() + ingredientType.slice(1);\n  let ingredient = null;\n\n  switch (ingredientType) {\n    case \"bread-bottom\":\n      ingredient = <div className={styles.BreadBottom}></div>;\n      break;\n    case \"bread-top\":\n      ingredient = (\n        <div className={styles.BreadTop}>\n          <div className={styles.Seeds1}></div>\n          <div className={styles.Seeds2}></div>\n        </div>\n      );\n      break;\n    case `${ingredientType}`:\n      ingredient = <div className={styles[ingredientClassName]}></div>;\n      break;\n    default:\n      ingredient = null;\n  }\n  return ingredient;\n};\n\nBurgerIngredient.propTypes = {\n  type: propTypes.string.isRequired,\n};\nexport default BurgerIngredient;\n","import React from \"react\";\nimport styles from \"./Burger.module.css\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nconst Burger = (props) => {\n  // console.log(props.ingredients)\n\n  //TODO: look how is this working\n  let transformedIngredients = Object.keys(props.ingredients)\n    .map((igKey) => {\n      return [...Array(props.ingredients[igKey].qty)].map((_, i) => {\n        return <BurgerIngredient key={igKey + i} type={igKey} />;\n      });\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = (\n      <p className=\"lead text-light text-center\">\n        Please start adding ingredients\n      </p>\n    );\n  }\n  return (\n    <div className=\"card  overflow-auto bg-dark\">\n      {props.header && (\n        <h4 className=\"card-header bg-dark text-white border-info text-center\">\n          {props.header}\n        </h4>\n      )}\n      <div className={styles.Burger}>\n        <BurgerIngredient type=\"bread-top\" />\n        {transformedIngredients}\n        <BurgerIngredient type=\"bread-bottom\" />\n      </div>\n    </div>\n  );\n};\nexport default Burger;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport * as ingredientsActions from \"../../store/actions/ingredientsActions/ingredientsActions\";\nimport BuildControls from \"../../components/BuildControls/BuildControls\";\nimport Burger from \"../../components/Burger/Burger\";\nimport { addItemToCart } from \"../helper/cartHelper\";\n\nconst BurgerBuilder = () => {\n  const dispatch = useDispatch();\n\n  const ingredients = useSelector((state) => state.ingredients);\n  const availableIngredients = ingredients.ingredients;\n  const currentPrice = ingredients.totalPrice;\n  const currentBurgerIsPurchasable = ingredients.isPurchasable;\n  const currentBurger = ingredients.currentBurgerIng;\n\n  useEffect(() => {\n    dispatch(ingredientsActions.loadAllIngredients());\n  }, [dispatch]);\n\n  const addIngredientHandler = (ingId) => {\n    dispatch(ingredientsActions.addIngredient(ingId));\n  };\n\n  const removeIngredientHandler = (ingId) => {\n    dispatch(ingredientsActions.removeIngredient(ingId));\n  };\n\n  const disabledIngredientInfo = (ingId) => {\n    //alternative of currentBurger[ingId] && currentBurger[ingId].qty > 0\n    if (currentBurger[ingId]?.qty > 0) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const addToCartHandler = () => {\n    const item = {\n      ingredients: currentBurger,\n      itemPrice: currentPrice,\n    };\n    addItemToCart(item);\n    dispatch(ingredientsActions.resetBurgerBuilder());\n  };\n\n  return (\n    <>\n      <div className=\"container-xl mt-3\">\n        <div className=\"row\">\n          <div className=\"col-lg-4 col-md-5 col-sm-8 col-12\">\n            <Burger ingredients={currentBurger} header={`Burger in making!!`} />\n          </div>\n          <div className=\"col-lg-8 col-md-7 col-sm-8 col-12\">\n            <BuildControls\n              ingredients={availableIngredients}\n              price={currentPrice}\n              purchasable={currentBurgerIsPurchasable}\n              disabled={disabledIngredientInfo}\n              ingredientsAdder={addIngredientHandler}\n              ingredientsRemover={removeIngredientHandler}\n              addtoCart={addToCartHandler}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default BurgerBuilder;\n","export const addItemToCart = (item) => {\n  let cart = [];\n  if (typeof window !== undefined) {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n    const itemId = new Date().toISOString();\n    cart.push({ [itemId]: item });\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }\n};\n\nexport const removeItemFromCart = (itemId) => {\n  let cart = [];\n  if (typeof window !== undefined) {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n    cart.map((item, index) => {\n      if (Object.keys(item)[0] === itemId) {\n        cart.splice(index, 1);\n      }\n      return null;\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }\n};\n\nexport const loadCart = () => {\n  if (typeof window !== undefined) {\n    if (localStorage.getItem(\"cart\")) {\n      return JSON.parse(localStorage.getItem(\"cart\"));\n    }\n  }\n};\n\nexport const clearCart = () => {\n  if (typeof window !== undefined) {\n    localStorage.removeItem(\"cart\");\n    let cart = [];\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }\n};\n","import React from \"react\";\n\nconst ItemDetails = (props) => {\n  const ingredientSummary = Object.keys(props.ingredients).map((igkey) => {\n    if (props.ingredients[igkey].qty > 0) {\n      return (\n        <li\n          key={igkey}\n          className=\"list-group-item d-flex justify-content-between align-items-center\"\n        >\n          {props.availableIngredients?.ingredients[igkey]?.label}{\" \"}\n          <span className=\"badge badge-info badge-pill\">\n            {props.ingredients[igkey].qty}\n          </span>\n        </li>\n      );\n    }\n    return null;\n  });\n\n  return (\n    <>\n      <ul className=\"list-group list-group-flush rounded\">\n        {ingredientSummary}\n      </ul>\n      <div className=\"d-flex justify-content-between flex-wrap mt-2 align-items-center\">\n        <p className=\"lead text-light\">Total Price: ₹ {props.itemPrice}</p>\n        <button\n          type=\"button\"\n          className=\"btn btn-sm btn-danger\"\n          onClick={() => {\n            props.removeItem(props.cartItemId);\n          }}\n        >\n          Remove\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default ItemDetails;\n","import React from \"react\";\nimport Burger from \"../Burger/Burger\";\nimport ItemDetails from \"./ItemDetails/ItemDetails\";\n\nconst Item = (props) => {\n  let ingredients;\n  let price;\n  let cartItemId;\n  for (const itemId in props.item) {\n    cartItemId = itemId;\n    ingredients = props.item[itemId].ingredients;\n    price = props.item[itemId].itemPrice;\n  }\n\n  return (\n    <>\n      <div className=\"row my-3 no-gutters container \">\n        <div className=\"col-lg-3 col-md-5 col-sm-6  border border-info rounded\">\n          <div>\n            <Burger ingredients={ingredients} />\n          </div>\n        </div>\n        <div className=\"col-lg-9 col-md-7 col-sm-6 px-md-2 px-sm-3\">\n          <div className=\"row justify-content-end\">\n            <div className=\"col-lg-7 col-md-10 col-sm-12\">\n              <ItemDetails\n                ingredients={ingredients}\n                itemPrice={price}\n                availableIngredients={props.availableIngredients}\n                cartItemId={cartItemId}\n                removeItem={props.removeItem}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Item;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Item from \"../../components/Item/Item\";\nimport { loadCart, clearCart, removeItemFromCart } from \"../helper/cartHelper\";\nimport * as ingredientsActions from \"../../store/actions/ingredientsActions/ingredientsActions\";\nimport { DropdownButton, ButtonGroup, Dropdown } from \"react-bootstrap\";\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(ingredientsActions.loadAllIngredients());\n  }, [dispatch]);\n\n  const availableIngredients = useSelector((state) => state.ingredients);\n\n  const [cartItems, setCartItems] = useState([]);\n  const [reload, setReload] = useState(false);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [selectedStore, setSelectedStore] = useState(\"\");\n\n  useEffect(() => {\n    setCartItems(loadCart());\n  }, [reload]);\n\n  useEffect(() => {\n    let sum = 0;\n\n    cartItems.map((item) => {\n      for (let key in item) {\n        sum = sum + item[key].itemPrice;\n      }\n      return null;\n    });\n\n    setTotalPrice(sum);\n  }, [cartItems]);\n\n  const clearCartHandler = () => {\n    clearCart();\n    setReload((prevState) => !prevState);\n  };\n\n  const removeItemHandler = (id) => {\n    removeItemFromCart(id);\n    setReload((prevState) => !prevState);\n  };\n\n  return cartItems?.length > 0 ? (\n    <>\n      <div className=\"container-xl\">\n        <div className=\"card mt-3 mb-3 overflow-auto bg-dark\">\n          <div className=\"card-header bg-dark text-white border-info d-flex justify-content-between flex-wrap\">\n            <h5 className=\"align-self-center\">\n              Your Shopping Cart ({cartItems.length} items)\n            </h5>\n            <button\n              type=\"button\"\n              className=\"btn btn-info\"\n              onClick={clearCartHandler}\n            >\n              Clear Cart\n            </button>\n          </div>\n          <div className=\"container\">\n            <div className=\"row no-gutters\">\n              <div className=\"col-lg-12 col-md-12 col-sm-12 col-12 bg-dark\">\n                {cartItems.map((item, index) => {\n                  return (\n                    <div\n                      key={index}\n                      className=\"bg-dark my-3 border border-top-0 border-right-0 border-left-0 border-white\"\n                    >\n                      <Item\n                        item={item}\n                        availableIngredients={availableIngredients}\n                        removeItem={removeItemHandler}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"container-fluid position-sticky bg-info\"\n        style={{ bottom: 0 }}\n      >\n        <div className=\"p-1 d-flex justify-content-between align-items-center\">\n          <div>\n            <DropdownButton\n              as={ButtonGroup}\n              key=\"up\"\n              id={`dropdown-button-drop-up`}\n              drop={\"up\"}\n              variant=\"light\"\n              title={selectedStore === \"\" ? \"Select Store\" : selectedStore}\n              onSelect={(e) => setSelectedStore(e)}\n            >\n              <Dropdown.Item eventKey=\"Sector 5\">Sector 5</Dropdown.Item>\n              <Dropdown.Item eventKey=\"City Centre 1\">\n                City Centre 1\n              </Dropdown.Item>\n              <Dropdown.Item eventKey=\"Sector 2\">Sector 2</Dropdown.Item>\n            </DropdownButton>\n          </div>\n          <div className=\"d-flex align-items-center\">\n            <div className=\"mr-2\">\n              <h3>Total: ₹{totalPrice}</h3>\n            </div>\n            <div>\n              <button\n                className=\"btn btn-success\"\n                disabled={selectedStore === \"\" ? true : false}\n              >\n                Proceed to Pay\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  ) : (\n    <div>No product in the cart</div>\n  );\n};\nexport default Cart;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Base from \"./components/Base/Base\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Cart from \"./containers/Cart/Cart\";\n\nconst Routes = () => {\n  return (\n    <Router>\n      <Base>\n        <Switch>\n          <Route exact path=\"/\" component={BurgerBuilder} />\n          <Route exact path=\"/cart\" component={Cart} />\n        </Switch>\n      </Base>\n    </Router>\n  );\n};\nexport default Routes;\n","import {\n  GET_ALL_INGREDIENTS,\n  ADD_INGREDIENT,\n  REMOVE_INGREDIENT,\n  RESET_BURGER_BUILDER,\n} from \"../../actions/ingredientsActions/ingredientsActions\";\n\nconst initialState = {\n  ingredients: \"\",\n  currentBurgerIng: {},\n  isPurchasable: false,\n  totalPrice: 50,\n};\n\nconst getAllIngredientsHandler = (state, action) => {\n  return {\n    ...state,\n    ingredients: action.ingredients,\n  };\n};\n\nconst addIngredientHandler = (state, action) => {\n  const isIngAdded = state.currentBurgerIng[action.ingId];\n\n  const oldCount = !!isIngAdded ? isIngAdded.qty : 0;\n  const updatedCount = oldCount + 1;\n\n  const oldPrice = state.totalPrice;\n  const newPrice = oldPrice + parseInt(state.ingredients[action.ingId].price);\n\n  const updateCurrentBurger = {\n    ...state.currentBurgerIng,\n    [action.ingId]: { qty: updatedCount },\n  };\n\n  return {\n    ...state,\n    currentBurgerIng: updateCurrentBurger,\n    isPurchasable: newPrice > 100 ? true : false,\n    totalPrice: newPrice,\n  };\n};\n\nconst removeIngredientHandler = (state, action) => {\n  const isIngAdded = state.currentBurgerIng[action.ingId];\n\n  const oldCount = !!isIngAdded ? isIngAdded.qty : 0;\n  if (oldCount <= 0) {\n    return state;\n  }\n  const updatedCount = oldCount - 1;\n\n  const oldPrice = state.totalPrice;\n  const newPrice = oldPrice - parseInt(state.ingredients[action.ingId].price);\n\n  const updateCurrentBurger = {\n    ...state.currentBurgerIng,\n    [action.ingId]: { qty: updatedCount },\n  };\n\n  return {\n    ...state,\n    currentBurgerIng: updateCurrentBurger,\n    isPurchasable: newPrice > 100 ? true : false,\n    totalPrice: newPrice,\n  };\n};\n\nconst resetBurgerBuilderHandler = (state, action) => {\n  return {\n    ...state,\n    currentBurgerIng: {},\n    isPurchasable: false,\n    totalPrice: 50,\n  };\n};\n\nconst ingredientsReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_INGREDIENTS:\n      return getAllIngredientsHandler(state, action);\n\n    case ADD_INGREDIENT:\n      return addIngredientHandler(state, action);\n\n    case REMOVE_INGREDIENT:\n      return removeIngredientHandler(state, action);\n\n    case RESET_BURGER_BUILDER:\n      return resetBurgerBuilderHandler(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default ingredientsReducers;\n","import { ADD_TO_CART } from \"../../actions/cartActions/cartActions\";\n\nconst initialState = {};\n\nconst cartReducers = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      const itemId = new Date().toISOString();\n      return {\n        ...state,\n        [itemId]: action.item,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducers;\n","export const ADD_TO_CART = \"ADD_TO_CART\";\n\nexport const addToCart = (item) => {\n  return {\n    type: ADD_TO_CART,\n    item,\n  };\n};\n\n// export const GET_CART_ITEMS = \"GET_CART_ITEMS\";\n\n\n","import React from \"react\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport ReduxThunk from \"redux-thunk\";\n\nimport Routes from \"./Routes\";\nimport ingredientsReducers from \"./store/reducers/ingredientsReducers/ingredientsReducers\";\nimport cartReducers from \"./store/reducers/cartReducers/cartReducers\";\n\nconst rootReducer = combineReducers({\n  ingredients: ingredientsReducers,\n  cart: cartReducers,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}